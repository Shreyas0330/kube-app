Install Kubernetes: If you haven't already, install Kubernetes on your cluster. You can use tools like kubeadm, kops, or Minikube depending on your environment.
Deploy Metrics Server: The Kubernetes dashboard relies on the Metrics Server to gather cluster metrics. Deploy the Metrics Server by running kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml.
Deploy Kubernetes Dashboard: Deploy the Kubernetes dashboard using the following command: kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.3.1/aio/deploy/recommended.yaml.
Create Service Account: Create a service account for the dashboard using the following YAML manifest:
yaml
Copy code
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kubernetes-dashboard
Apply this manifest using kubectl apply -f <filename.yaml>.
Create Cluster Role Binding: Create a cluster role binding for the dashboard service account:
yaml
Copy code
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: kubernetes-dashboard
Apply this manifest using kubectl apply -f <filename.yaml>.
Get Access Token: To log in to the dashboard, you need an access token. Get the token by running the following command:
sql
Copy code
kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk '{print $1}')
Access Dashboard: Start the dashboard proxy by running kubectl proxy. You can now access the dashboard at http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/. Log in using the token obtained in step 6.
That's it! You should now have a Kubernetes dashboard up and running for monitoring your cluster.
